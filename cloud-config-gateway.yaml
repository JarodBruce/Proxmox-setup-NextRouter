#cloud-config
package_update: true
packages:
  - nftables
  - isc-dhcp-server

# SSH configuration
ssh_pwauth: true
disable_root: false
chpasswd:
  expire: false
  users:
    - name: ${USER_NAME}
      password: password
      type: text
      ssh_authorized_keys:
        - ${SSH_PUBLIC_KEY}

# SSH Keys
ssh_authorized_keys:
  - ${SSH_PUBLIC_KEY}

runcmd:
  # 0. Debug information
  - |
    echo "=== Gateway VM Cloud-Init Debug Info ==="
    echo "Hostname: $(hostname)"
    echo "Date: $(date)"
    echo "User: $(whoami)"
    echo "Current working directory: $(pwd)"
    echo "Network interfaces before configuration:"
    ip addr show
    echo "=== Starting Gateway Configuration ==="
    
  # 0. Configure SSH for password authentication only
  - |
    cat > /etc/ssh/sshd_config << 'EOSSH'
    Port 22
    PermitRootLogin yes
    PubkeyAuthentication yes
    PasswordAuthentication yes
    PermitEmptyPasswords no
    ChallengeResponseAuthentication no
    UsePAM yes
    X11Forwarding yes
    PrintMotd no
    AcceptEnv LANG LC_*
    Subsystem sftp /usr/lib/openssh/sftp-server
    EOSSH
  - systemctl restart sshd
  
  # 1. Enable IP Forwarding
  - echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/99-ip_forward.conf
  - sysctl -p /etc/sysctl.d/99-ip_forward.conf

  # 1.5. Configure DNS
  - |
    if [ -n "${dns_servers}" ]; then
      echo "nameserver $(echo ${dns_servers} | sed 's/,/\nnameserver /g')" > /etc/resolv.conf
    fi

  # 2. Configure DHCP Server for gateway0 network
  - |
    echo "=== DHCP Configuration Variables ==="
    echo "subnet_network: ${subnet_network}"
    echo "subnet_mask: ${subnet_mask}"
    echo "dhcp_start: ${dhcp_start}"
    echo "dhcp_end: ${dhcp_end}"
    echo "router_ip: ${router_ip}"
    echo "broadcast_ip: ${broadcast_ip}"
    echo "dns_servers: ${dns_servers}"
    echo "=== Creating DHCP Configuration ==="
    
    cat > /etc/dhcp/dhcpd.conf << 'EODHCP'
    # Global DHCP configuration
    default-lease-time 600;
    max-lease-time 7200;
    authoritative;
    
    # Subnet configuration for gateway0 interface (eth1)
    subnet ${subnet_network} netmask ${subnet_mask} {
      range ${dhcp_start} ${dhcp_end};
      option routers ${router_ip};
      option domain-name-servers 1.1.1.1;
      option broadcast-address ${broadcast_ip};
    }
    EODHCP
    
    echo "DHCP configuration created:"
    cat /etc/dhcp/dhcpd.conf

  # 3. Configure DHCP server to listen on eth1 (gateway0 interface)
  - echo 'INTERFACESv4="eth1"' > /etc/default/isc-dhcp-server
  - echo 'INTERFACESv6=""' >> /etc/default/isc-dhcp-server

  # 4. Create nftables configuration for Gateway
  - |
    cat > /etc/nftables.conf << 'EONFT'
    #!/usr/sbin/nft -f

    flush ruleset

    table inet filter {
        chain input {
            type filter hook input priority 0; policy accept;
            
            # Allow loopback traffic
            iifname "lo" accept
            
            # Allow established and related connections
            ct state established,related accept
            
            # Allow SSH access from both interfaces
            tcp dport 22 accept
            
            # Allow DHCP traffic on gateway0 interface
            iifname "eth1" udp dport 67 accept
            iifname "eth1" udp sport 68 accept
            oifname "eth1" udp dport 67 accept
            oifname "eth1" udp sport 68 accept
        }

        chain forward {
            type filter hook forward priority 0; policy drop;

            # Allow traffic from LAN (vmbr0/eth0) to gateway network (eth1)
            iifname "eth0" oifname "eth1" accept

            # Allow traffic from gateway network (eth1) to LAN (vmbr0/eth0)
            iifname "eth1" oifname "eth0" accept
        }

        chain output {
            type filter hook output priority 0; policy accept;
        }
    }

    table inet nat {
        chain postrouting {
            type nat hook postrouting priority 100; policy accept;

            # NAPT: Masquerade traffic from LAN going out to gateway network
            oifname "eth1" masquerade
            # NAPT: Masquerade traffic from gateway network going out to LAN (to internet)
            oifname "eth0" masquerade
        }
    }
    EONFT

  # 4.1. Set proper permissions for nftables config
  - chmod 755 /etc/nftables.conf
  
  # 4.2. Test nftables configuration syntax
  - |
    echo "=== Testing nftables configuration ==="
    echo "Configuration file content:"
    cat /etc/nftables.conf
    echo ""
    echo "Testing syntax..."
    if ! nft -c -f /etc/nftables.conf; then
      echo "ERROR: nftables configuration syntax error!"
      cat /etc/nftables.conf
      exit 1
    fi
    echo "nftables configuration syntax is valid."

  # 5. Enable and start services
  - systemctl enable nftables
  - systemctl stop nftables || true
  - systemctl start nftables
  
  # 5.1. Verify nftables is running
  - |
    echo "=== Checking nftables status ==="
    systemctl status nftables --no-pager
    echo ""
    echo "=== Current nftables ruleset ==="
    nft list ruleset
    echo ""
    echo "=== Verifying IP forwarding ==="
    sysctl net.ipv4.ip_forward
    echo ""
  
  - systemctl enable isc-dhcp-server
  
  # 6. Wait for network to be ready and start DHCP server
  - |
    echo "Waiting for network interfaces to be ready..."
    sleep 15
    echo "Network interfaces status:"
    ip addr show
    echo "Starting DHCP server..."
    
  - systemctl start isc-dhcp-server
  
  # 6.1. Check DHCP server status and troubleshoot if needed
  - |
    echo "Checking DHCP server status..."
    if systemctl is-active --quiet isc-dhcp-server; then
      echo "DHCP server is running successfully."
      systemctl status isc-dhcp-server
    else
      echo "DHCP server failed to start. Checking logs..."
      journalctl -u isc-dhcp-server --no-pager -n 20
      echo "DHCP configuration file:"
      cat /etc/dhcp/dhcpd.conf
      echo "DHCP server interface configuration:"
      cat /etc/default/isc-dhcp-server
      echo "Attempting to restart DHCP server..."
      systemctl restart isc-dhcp-server
    fi

  # 7. Final status check
  - |
    echo "=== Final Gateway Configuration Status ==="
    echo "Date: $(date)"
    echo ""
    echo "IP Forwarding status:"
    sysctl net.ipv4.ip_forward
    echo ""
    echo "Network interfaces:"
    ip addr show
    echo ""
    echo "Routing table:"
    ip route show
    echo ""
    echo "nftables ruleset:"
    nft list ruleset
    echo ""
    echo "DHCP server status:"
    systemctl status isc-dhcp-server --no-pager
    echo ""
    echo "DHCP server configuration:"
    cat /etc/dhcp/dhcpd.conf
    echo ""
    echo "=== Gateway VM configuration completed ==="
    echo "Check /var/log/cloud-init-output.log for full details"
